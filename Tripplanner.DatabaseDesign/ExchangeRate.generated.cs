//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//     Produced by Entity Framework Visual Editor
//     https://github.com/msawczyn/EFDesigner
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Runtime.CompilerServices;

namespace Tripplanner.DatabaseDesign
{
   public partial class ExchangeRate
   {
      partial void Init();

      /// <summary>
      /// Default constructor. Protected due to required properties, but present because EF needs it.
      /// </summary>
      protected ExchangeRate()
      {
         Init();
      }

      /// <summary>
      /// Public constructor with required data
      /// </summary>
      /// <param name="fromcurrency"></param>
      /// <param name="tocurrency"></param>
      /// <param name="_trip0"></param>
      public ExchangeRate(string fromcurrency, string tocurrency, global::Tripplanner.DatabaseDesign.Trip _trip0)
      {
         if (string.IsNullOrEmpty(fromcurrency)) throw new ArgumentNullException(nameof(fromcurrency));
         this.FromCurrency = fromcurrency;
         if (string.IsNullOrEmpty(tocurrency)) throw new ArgumentNullException(nameof(tocurrency));
         this.ToCurrency = tocurrency;
         if (_trip0 == null) throw new ArgumentNullException(nameof(_trip0));
         _trip0.ExchangeRates.Add(this);

         Init();
      }

      /// <summary>
      /// Static create function (for use in LINQ queries, etc.)
      /// </summary>
      /// <param name="fromcurrency"></param>
      /// <param name="tocurrency"></param>
      /// <param name="_trip0"></param>
      public static ExchangeRate Create(string fromcurrency, string tocurrency, global::Tripplanner.DatabaseDesign.Trip _trip0)
      {
         return new ExchangeRate(fromcurrency, tocurrency, _trip0);
      }

      /*************************************************************************
       * Persistent properties
       *************************************************************************/

      /// <summary>
      /// Identity, Required, Indexed
      /// </summary>
      [Key]
      [Required]
      public int Id { get; set; }

      /// <summary>
      /// Required
      /// </summary>
      [Required]
      public string FromCurrency { get; set; }

      /// <summary>
      /// Required
      /// </summary>
      [Required]
      public string ToCurrency { get; set; }

      public decimal? LastRate { get; set; }

      public DateTime? LastRateDate { get; set; }

      public string LastRateSource { get; set; }

      /*************************************************************************
       * Persistent navigation properties
       *************************************************************************/

   }
}

