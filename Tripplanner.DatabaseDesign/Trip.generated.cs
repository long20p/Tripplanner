//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//     Produced by Entity Framework Visual Editor
//     https://github.com/msawczyn/EFDesigner
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Runtime.CompilerServices;

namespace Tripplanner.DatabaseDesign
{
   public partial class Trip
   {
      partial void Init();

      /// <summary>
      /// Default constructor. Protected due to required properties, but present because EF needs it.
      /// </summary>
      protected Trip()
      {
         Transportations = new System.Collections.Generic.HashSet<global::Tripplanner.DatabaseDesign.Transportation>();
         Accommodations = new System.Collections.Generic.HashSet<global::Tripplanner.DatabaseDesign.Accommodation>();
         Sightseeings = new System.Collections.Generic.HashSet<global::Tripplanner.DatabaseDesign.Activity>();
         ExchangeRates = new System.Collections.Generic.HashSet<global::Tripplanner.DatabaseDesign.ExchangeRate>();
         WeatherForecasts = new System.Collections.Generic.HashSet<global::Tripplanner.DatabaseDesign.WeatherForecast>();
         Trips = new System.Collections.Generic.HashSet<global::Tripplanner.DatabaseDesign.Trip>();
         ExternalLinks = new System.Collections.Generic.HashSet<global::Tripplanner.DatabaseDesign.ExternalLink>();
         CustomItems = new System.Collections.Generic.HashSet<global::Tripplanner.DatabaseDesign.CustomItem>();

         Init();
      }

      /// <summary>
      /// Public constructor with required data
      /// </summary>
      /// <param name="tripid"></param>
      /// <param name="name"></param>
      /// <param name="datefrom"></param>
      /// <param name="_trip0"></param>
      public Trip(Guid tripid, string name, DateTime datefrom, global::Tripplanner.DatabaseDesign.Trip _trip0)
      {
         this.TripId = tripid;
         if (string.IsNullOrEmpty(name)) throw new ArgumentNullException(nameof(name));
         this.Name = name;
         this.DateFrom = datefrom;
         if (_trip0 == null) throw new ArgumentNullException(nameof(_trip0));
         _trip0.Trips.Add(this);

         this.Transportations = new System.Collections.Generic.HashSet<global::Tripplanner.DatabaseDesign.Transportation>();
         this.Accommodations = new System.Collections.Generic.HashSet<global::Tripplanner.DatabaseDesign.Accommodation>();
         this.Sightseeings = new System.Collections.Generic.HashSet<global::Tripplanner.DatabaseDesign.Activity>();
         this.ExchangeRates = new System.Collections.Generic.HashSet<global::Tripplanner.DatabaseDesign.ExchangeRate>();
         this.WeatherForecasts = new System.Collections.Generic.HashSet<global::Tripplanner.DatabaseDesign.WeatherForecast>();
         this.Trips = new System.Collections.Generic.HashSet<global::Tripplanner.DatabaseDesign.Trip>();
         this.ExternalLinks = new System.Collections.Generic.HashSet<global::Tripplanner.DatabaseDesign.ExternalLink>();
         this.CustomItems = new System.Collections.Generic.HashSet<global::Tripplanner.DatabaseDesign.CustomItem>();
         Init();
      }

      /// <summary>
      /// Static create function (for use in LINQ queries, etc.)
      /// </summary>
      /// <param name="tripid"></param>
      /// <param name="name"></param>
      /// <param name="datefrom"></param>
      /// <param name="_trip0"></param>
      public static Trip Create(Guid tripid, string name, DateTime datefrom, global::Tripplanner.DatabaseDesign.Trip _trip0)
      {
         return new Trip(tripid, name, datefrom, _trip0);
      }

      /*************************************************************************
       * Persistent properties
       *************************************************************************/

      /// <summary>
      /// Identity, Required, Indexed
      /// </summary>
      [Key]
      [Required]
      public int Id { get; set; }

      /// <summary>
      /// Required
      /// </summary>
      [Required]
      public Guid TripId { get; set; }

      /// <summary>
      /// Required
      /// </summary>
      [Required]
      public string Name { get; set; }

      /// <summary>
      /// Required
      /// </summary>
      [Required]
      public DateTime DateFrom { get; set; }

      public DateTime? DateTo { get; set; }

      public Guid? ParentTripId { get; set; }

      /*************************************************************************
       * Persistent navigation properties
       *************************************************************************/

      public virtual ICollection<global::Tripplanner.DatabaseDesign.Transportation> Transportations { get; private set; }

      public virtual ICollection<global::Tripplanner.DatabaseDesign.Accommodation> Accommodations { get; private set; }

      public virtual ICollection<global::Tripplanner.DatabaseDesign.Activity> Sightseeings { get; private set; }

      public virtual ICollection<global::Tripplanner.DatabaseDesign.ExchangeRate> ExchangeRates { get; private set; }

      public virtual ICollection<global::Tripplanner.DatabaseDesign.WeatherForecast> WeatherForecasts { get; private set; }

      public virtual ICollection<global::Tripplanner.DatabaseDesign.Trip> Trips { get; private set; }

      public virtual ICollection<global::Tripplanner.DatabaseDesign.ExternalLink> ExternalLinks { get; private set; }

      public virtual ICollection<global::Tripplanner.DatabaseDesign.CustomItem> CustomItems { get; private set; }

   }
}

